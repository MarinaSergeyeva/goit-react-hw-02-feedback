{"version":3,"sources":["Components/Statistics/Statistics.module.css","Components/Feedback/Feedback.module.css","Components/Feedback/Feedback.js","Components/Statistics/Statistics.js","Components/Section/Section.js","Components/App.js","index.js"],"names":["module","exports","Feedback","onLeaveFeedback","this","props","className","styles","feedbackTitle","type","name","onClick","Component","Statistics","good","bad","neutral","total","positivePercentage","statisticsTitle","statisticsList","statisticsItem","isNaN","Section","toFixed","App","state","setState","prevState","title","ReactDOM","render","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,gBAAkB,oCAAoC,eAAiB,mCAAmC,mBAAqB,uCAAuC,eAAiB,qC,mBCAzMD,EAAOC,QAAU,CAAC,cAAgB,kC,0LCiCnBC,E,uKA7BH,IACAC,EAAoBC,KAAKC,MAAzBF,gBAER,OACE,oCACE,uBAAGG,UAAWC,IAAOC,eAArB,yBAEA,4BACEC,KAAK,SACLC,KAAK,OACLC,QAAS,kBAAMR,EAAgB,UAHjC,QAOA,4BACEM,KAAK,SACLC,KAAK,UACLC,QAAS,kBAAMR,EAAgB,aAHjC,WAOA,4BAAQM,KAAK,SAASC,KAAK,MAAMC,QAAS,kBAAMR,EAAgB,SAAhE,Y,GAtBeS,a,gBC+CRC,E,uKA9CH,IAAD,EACmDT,KAAKC,MAAvDS,EADD,EACCA,KAAMC,EADP,EACOA,IAAKC,EADZ,EACYA,QAASC,EADrB,EACqBA,MAAOC,EAD5B,EAC4BA,mBAEnC,OACE,oCACE,uBAAGZ,UAAWC,IAAOY,iBAArB,cAEW,IAAVF,EACC,oBAEA,wBAAIX,UAAWC,IAAOa,gBACpB,4BACE,uBAAGd,UAAWC,IAAOc,gBAArB,SACQ,8BAAOP,KAGjB,4BACE,uBAAGR,UAAWC,IAAOc,gBAArB,YACW,8BAAOL,KAGpB,4BACE,uBAAGV,UAAWC,IAAOc,gBAArB,QACO,8BAAON,KAGhB,4BACE,uBAAGT,UAAWC,IAAOc,gBAArB,UACS,8BAAOJ,KAGlB,4BACE,uBAAGX,UAAWC,IAAOc,gBAArB,uBAEE,8BACGC,MAAMJ,GAAsB,EAAIA,EADnC,a,GAnCSN,aCsBVW,E,uKApBH,IAAD,EACyCnB,KAAKC,MAA7CS,EADD,EACCA,KAAMC,EADP,EACOA,IAAKC,EADZ,EACYA,QAASb,EADrB,EACqBA,gBACtBc,EAAQH,EAAOC,EAAMC,EACrBE,GAA8B,IAAPJ,EAAcG,GAAOO,QAAQ,GAE1D,OACE,oCACE,kBAAC,EAAD,CAAUrB,gBAAiBA,IAC3B,kBAAC,EAAD,CACEW,KAAMA,EACNE,QAASA,EACTD,IAAKA,EACLE,MAAOA,EACPC,mBAAoBA,S,GAdRN,aCyBPa,E,4MA1BbC,MAAQ,CACNZ,KAAM,EACNE,QAAS,EACTD,IAAK,G,EAGPZ,gBAAkB,SAACO,GAEjB,EAAKiB,UAAS,SAACC,GAAD,sBAAmBlB,EAAOkB,EAAUlB,GAAQ,O,uDAGlD,IAAD,EACwBN,KAAKsB,MAA5BZ,EADD,EACCA,KAAME,EADP,EACOA,QAASD,EADhB,EACgBA,IAEvB,OACE,kBAAC,EAAD,CACEc,MAAM,GACNf,KAAMA,EACNE,QAASA,EACTD,IAAKA,EACLZ,gBAAiBC,KAAKD,sB,GArBZS,aCElBkB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.bc57ba82.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsTitle\":\"Statistics_statisticsTitle__emPMy\",\"statisticsList\":\"Statistics_statisticsList__10woM\",\"statisticsListItem\":\"Statistics_statisticsListItem__1h9Yr\",\"statisticsItem\":\"Statistics_statisticsItem__3jqm-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackTitle\":\"Feedback_feedbackTitle__3FniE\"};","import React, { Component } from \"react\";\r\nimport styles from \"./Feedback.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Feedback extends Component {\r\n  render() {\r\n    const { onLeaveFeedback } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <p className={styles.feedbackTitle}>Please leave feedback</p>\r\n\r\n        <button\r\n          type=\"button\"\r\n          name=\"good\"\r\n          onClick={() => onLeaveFeedback(\"good\")}\r\n        >\r\n          Good\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          name=\"neutral\"\r\n          onClick={() => onLeaveFeedback(\"neutral\")}\r\n        >\r\n          Neutral\r\n        </button>\r\n        <button type=\"button\" name=\"bad\" onClick={() => onLeaveFeedback(\"bad\")}>\r\n          Bad\r\n        </button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feedback;\r\n\r\nFeedback.propTypes = {\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./Statistics.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Statistics extends Component {\r\n  render() {\r\n    const { good, bad, neutral, total, positivePercentage } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <p className={styles.statisticsTitle}>Statistics</p>\r\n\r\n        {total === 0 ? (\r\n          \"No feedback given\"\r\n        ) : (\r\n          <ul className={styles.statisticsList}>\r\n            <li>\r\n              <p className={styles.statisticsItem}>\r\n                Good: <span>{good}</span>\r\n              </p>\r\n            </li>\r\n            <li>\r\n              <p className={styles.statisticsItem}>\r\n                Neutral: <span>{neutral}</span>\r\n              </p>\r\n            </li>\r\n            <li>\r\n              <p className={styles.statisticsItem}>\r\n                Bad: <span>{bad}</span>\r\n              </p>\r\n            </li>\r\n            <li>\r\n              <p className={styles.statisticsItem}>\r\n                Total: <span>{total}</span>\r\n              </p>\r\n            </li>\r\n            <li>\r\n              <p className={styles.statisticsItem}>\r\n                Positive Percentage:\r\n                <span>\r\n                  {isNaN(positivePercentage) ? 0 : positivePercentage}%\r\n                </span>\r\n              </p>\r\n            </li>\r\n          </ul>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Feedback from \"../Feedback/Feedback\";\r\nimport Statistics from \"../Statistics/Statistics\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Section extends Component {\r\n  render() {\r\n    const { good, bad, neutral, onLeaveFeedback } = this.props;\r\n    const total = good + bad + neutral;\r\n    const positivePercentage = ((good * 100) / total).toFixed(2);\r\n\r\n    return (\r\n      <>\r\n        <Feedback onLeaveFeedback={onLeaveFeedback} />\r\n        <Statistics\r\n          good={good}\r\n          neutral={neutral}\r\n          bad={bad}\r\n          total={total}\r\n          positivePercentage={positivePercentage}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  good: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Section from \"./Section/Section\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  onLeaveFeedback = (name) => {\r\n    // const name = e.target.name;\r\n    this.setState((prevState) => ({ [name]: prevState[name] + 1 }));\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n\r\n    return (\r\n      <Section\r\n        title=\"\"\r\n        good={good}\r\n        neutral={neutral}\r\n        bad={bad}\r\n        onLeaveFeedback={this.onLeaveFeedback}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}